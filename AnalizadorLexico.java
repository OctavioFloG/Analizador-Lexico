import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class AnalizadorLexico {
    private static final String INICIO = "q0";

    // Filas = estados, Columnas = elementos
    // cantidad de columnas 61 (caracteres)
    // cantidad de filas x (estados)
    private String[][] matrizTransicion = {
            //   a          b          c          d          e          f          g          h          i          j          k          l          m          n          o          p          q          r          s          t          u           v         w          x          y          z          0          1          2          3          4          5          6          7          8          9          +          -          *          /          %          {          }          (          )          [          ]          .     \b       _          $          ^       <        >        &        |        !         ;        ,       '        "
/*q1010.1*/ {"q6000.1", "q1010.1", "q1020.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q7000.1", "q7000.1", "q7000.1", "q7000.1", "q7000.1", "q7000.1", "q7000.1", "q7000.1", "q7000.1", "q7000.1", "q2010.1", "q2020.1", "q2030.1", "q2040.1", "q2050.1", "q4010.1", "q4020.1", "q5010.1", "q5020.2", "q5030.1", "q5040.1", "q9999", "q0", "q6000.1", "q6000.1", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999"}, // q0
/*q1010.2*/ {"q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q6000.1", "q9999",   "q9999",   "q9999",   "q9999",   "q9999",   "q9999",   "q9999",   "q9999",   "q9999",   "q9999",   "q9999",   "q9999", "q0", "q6000.1", "q6000.1", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999", "q9999"}, // q1010.1
/*q1010.3*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // 1010.2
/*q1010.4*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1010.3
/*q1010.5*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1010.4
/*q1010.6*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1010.5
/*q1010.7*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1010.6
/*q1020.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1010.7
/*q1020.2*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1020.1
/*q1020.3*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1020.2
/*q1020.4*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1020.3
/*q1020.5*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1020.4
//Aca van los demás estados(palabras reservadas)
//...

/* */ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q1020.5
/*q2010.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q2010.1 +
/*q2020.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q2020.1 -
/*q2030.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q2030.1 *
/*q2040.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q2040.1 /
/*q2050.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q2050.1 %
//Aca van los demás estados(operandos)
//...
/*q4010.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q4010.1 {
/*q4020.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q4020.1 }
/*q5010.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q5010.1 (
/*q5020.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q5020.1 )
/*q5030.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q6000.1 Identificadores
/*q5040.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q7000.1 Constantes
/*q6000.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q7000.2
/*q7000.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q7000.2
/*q7000.2*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}, // q7000.2
/*q8000.1*/ {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""} // q8000.1 Flotantes
    };

    protected static char[] caracteres = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',
                't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '-', '*', '/',
                '%', '{', '}', '(', ')', '[', ']', '.', ' ', '_', '$', '^', '<', '>', '&', '|', '!', ';', ',', '\'', '"' };

    protected static String[] estados = {"","","","","","","","","",""};
    

    protected static String[] estadosFinales = { "q1010.7", "q1020.5", "q1030.2", "q1040.6", "q1050.4", "q1060.5", "q1070.3",
            "q1080.2", "q1090.6", "q1100.3", "q1110.4", "q1120.3", "q1130.7", "q1140.7", "q1150.6", "q1160.6",
            "q1170.6", "q1180.4", "q1190.4", "q1200.5", "q2010.1", "q2020.1", "q2030.1", "q2040.1", "q2050.1",
            "q2060.2", "q2070.2", "q2080.2", "q2090.2", "q2100.2", "q2110.2", "q2120.2", "q2130.3", "q2140.3",
            "q2150.4", "q2160.1", "q2170.1", "q2180.2", "q2190.2", "q2200.2", "q2210.2", "q2220.1", "q2230.2",
            "q2240.2", "q2250.2", "q2260.2", "q2270.2", "q3010.1", "q3020.1", "q3030.1", "q4010.1", "q4020.1",
            "q5010.1", "q5020.1", "q5030.1", "q5040.1", "q6000.1","q7000.1","q8000.1" };
    
    private String estadoActual;

    // Constructor
    public AnalizadorLexico() {
        estadoActual = INICIO;
    }

    // Método para procesar una cadena de carácteres
    public boolean procesarCadena(String cadena) {
        estadoActual = INICIO; // Regresar a q0

        for (char simbolo : cadena.toCharArray()) {
            char lower_simbolo = Character.toLowerCase(simbolo);
            int columna = obtenerColumna(lower_simbolo);
            if (columna == -1) {
                return false;
            }
            estadoActual = matrizTransicion[0][columna];
            // estadoActual = matrizTransicion[estadoActual][columna];

            if (estadoActual  == null) {
                // No se encontró ningun estado siguiente
                return false;
            }
        }
        return false;
    }

    public static void main(String[] args) {
        AnalizadorLexico automata = new AnalizadorLexico();
        String nombreArchivo = "codigo.txt";
        automata.procesarArchivo(nombreArchivo);
        System.out.println(obtenerFila("q0"));//el estado lo tomamos de la matriz transicion
        System.out.println(obtenerColumna('"'));
    }

    private static int obtenerColumna(char simbolo) {
        for (int i = 0; i < caracteres.length; i++) {
            if (caracteres[i] == simbolo) {
                return i;
            }
        }
        return -1;
    }

    private static int obtenerFila(String estado){
        for (int i = 0; i < estados.length; i++) {
            if (estados[i] == estado) {
                return i;
            }
        }
        return -1;
    }

    // Método para leer y procesar cadenas desde un archivo
    public void procesarArchivo(String nombreArchivo) {
        try (BufferedReader br = new BufferedReader(new FileReader(nombreArchivo))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                if (procesarCadena(linea)) {
                    System.out.println("La cadena '" + linea + "' es aceptada.");
                } else {
                    System.out.println("La cadena '" + linea + "' es rechazada.");
                }
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo: " + e.getMessage());
        }
    }
}
